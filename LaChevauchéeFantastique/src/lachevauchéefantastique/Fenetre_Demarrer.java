/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lachevauchéefantastique;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author rembr
 */
public class Fenetre_Demarrer extends javax.swing.JFrame {

    int Difficulte;
    int ModeJeu;

    /**
     * Creates new form Fenetre_Demarrer
     */
    public Fenetre_Demarrer() {
        initComponents();
        setLocationRelativeTo(null);
        Btn_Facile.setVisible(false);
        Btn_Moyen.setVisible(false);
        Btn_Speedrun.setVisible(false);
        Btn_Chrono.setVisible(false);
        Btn_Sandbox.setVisible(false);
        Txt_Selection_Diff.setVisible(false);
        Txt_SandTaille.setVisible(false);
        SpinnerTaille.setVisible(false);
        SpinnerPosHor.setVisible(false);
        SpinnerPosVert.setVisible(false);
        SpinnerMelange.setVisible(false);
        Btn_LancerJeu.setVisible(false);
        Txt_SandTaille.setVisible(false);
        Txt_SandMelange.setVisible(false);
        Txt_SandPosHor.setVisible(false);
        Txt_SandPosVert.setVisible(false);
        Txt_SandBox.setVisible(false);
        Btn_RetourMode.setVisible(false);
        Btn_RetourDiff.setVisible(false);
        
        SpinnerMelange.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                // Récupération de la valeur sélectionnée
                int valeurMelange = (int) SpinnerMelange.getValue();
                int valeurTaille = (int) SpinnerTaille.getValue();
                int valeurPosHor = (int) SpinnerPosHor.getValue();
                int valeurPosVert = (int) SpinnerPosVert.getValue();
                if (valeurMelange<=((valeurTaille*valeurTaille)-1) && valeurPosHor<=(valeurTaille-1) && valeurPosVert<=(valeurTaille-1)){
                    Btn_LancerJeu.setEnabled(true);
                }else{
                    Btn_LancerJeu.setEnabled(false);
                }
            }
        });
        
        SpinnerPosHor.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                // Récupération de la valeur sélectionnée
                int valeurMelange = (int) SpinnerMelange.getValue();
                int valeurTaille = (int) SpinnerTaille.getValue();
                int valeurPosHor = (int) SpinnerPosHor.getValue();
                int valeurPosVert = (int) SpinnerPosVert.getValue();
                if (valeurMelange<=((valeurTaille*valeurTaille)-1) && valeurPosHor<=(valeurTaille-1) && valeurPosVert<=(valeurTaille-1)){
                    Btn_LancerJeu.setEnabled(true);
                }else{
                    Btn_LancerJeu.setEnabled(false);
                }
            }
        });
        
        SpinnerPosVert.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                // Récupération de la valeur sélectionnée
                int valeurMelange = (int) SpinnerMelange.getValue();
                int valeurTaille = (int) SpinnerTaille.getValue();
                int valeurPosHor = (int) SpinnerPosHor.getValue();
                int valeurPosVert = (int) SpinnerPosVert.getValue();
                if (valeurMelange<=((valeurTaille*valeurTaille)-1) && valeurPosHor<=(valeurTaille-1) && valeurPosVert<=(valeurTaille-1)){
                    Btn_LancerJeu.setEnabled(true);
                }else{
                    Btn_LancerJeu.setEnabled(false);
                }
            }
        });
        
        SpinnerTaille.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                // Récupération de la valeur sélectionnée
                int valeurMelange = (int) SpinnerMelange.getValue();
                int valeurTaille = (int) SpinnerTaille.getValue();
                int valeurPosHor = (int) SpinnerPosHor.getValue();
                int valeurPosVert = (int) SpinnerPosVert.getValue();
                if (valeurMelange<=((valeurTaille*valeurTaille)-1) && valeurPosHor<=(valeurTaille-1) && valeurPosVert<=(valeurTaille-1)){
                    Btn_LancerJeu.setEnabled(true);
                }else{
                    Btn_LancerJeu.setEnabled(false);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Btn_Mode_libre = new javax.swing.JButton();
        Btn_Mode_fantas = new javax.swing.JButton();
        Btn_Mode_enigme = new javax.swing.JButton();
        Txt_Bienv = new javax.swing.JLabel();
        Txt_Selection_Mode = new javax.swing.JLabel();
        Btn_Quitter = new javax.swing.JButton();
        Btn_Facile = new javax.swing.JButton();
        Btn_Moyen = new javax.swing.JButton();
        Btn_Speedrun = new javax.swing.JButton();
        Btn_Chrono = new javax.swing.JButton();
        Btn_Sandbox = new javax.swing.JButton();
        SpinnerTaille = new javax.swing.JSpinner();
        Txt_Selection_Diff = new javax.swing.JLabel();
        Txt_SandTaille = new javax.swing.JLabel();
        SpinnerMelange = new javax.swing.JSpinner();
        SpinnerPosVert = new javax.swing.JSpinner();
        SpinnerPosHor = new javax.swing.JSpinner();
        Btn_LancerJeu = new javax.swing.JButton();
        Txt_SandPosHor = new javax.swing.JLabel();
        Txt_SandPosVert = new javax.swing.JLabel();
        Txt_SandMelange = new javax.swing.JLabel();
        Txt_SandBox = new javax.swing.JLabel();
        Btn_RetourDiff = new javax.swing.JButton();
        Btn_RetourMode = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setFocusableWindowState(false);
        setPreferredSize(new java.awt.Dimension(500, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Btn_Mode_libre.setBackground(new java.awt.Color(102, 255, 51));
        Btn_Mode_libre.setText("Déplacement libre");
        Btn_Mode_libre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_Mode_libreActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_Mode_libre, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, -1, -1));

        Btn_Mode_fantas.setBackground(new java.awt.Color(255, 0, 0));
        Btn_Mode_fantas.setText("Déplacement Fantastique");
        Btn_Mode_fantas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_Mode_fantasActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_Mode_fantas, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, -1, -1));

        Btn_Mode_enigme.setBackground(new java.awt.Color(255, 255, 51));
        Btn_Mode_enigme.setText("Enigme");
        Btn_Mode_enigme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_Mode_enigmeActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_Mode_enigme, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, -1, -1));

        Txt_Bienv.setText("Bienvenue sur la Chevauché fantastique Shrek édition");
        getContentPane().add(Txt_Bienv, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 280, 20));

        Txt_Selection_Mode.setText("Sélectionnez le mode de jeu :");
        getContentPane().add(Txt_Selection_Mode, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, -1, 20));

        Btn_Quitter.setBackground(new java.awt.Color(0, 102, 102));
        Btn_Quitter.setText("Quitter");
        Btn_Quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_QuitterActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_Quitter, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, -1, -1));

        Btn_Facile.setBackground(new java.awt.Color(153, 255, 102));
        Btn_Facile.setText("Facile");
        Btn_Facile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_FacileActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_Facile, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, -1, -1));

        Btn_Moyen.setBackground(new java.awt.Color(255, 102, 0));
        Btn_Moyen.setText("Moyenne");
        Btn_Moyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_MoyenActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_Moyen, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, -1, -1));

        Btn_Speedrun.setBackground(new java.awt.Color(255, 0, 0));
        Btn_Speedrun.setText("Speedrun");
        Btn_Speedrun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_SpeedrunActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_Speedrun, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 80, -1));

        Btn_Chrono.setBackground(new java.awt.Color(153, 153, 153));
        Btn_Chrono.setText("Chrono");
        Btn_Chrono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ChronoActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_Chrono, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, -1, -1));

        Btn_Sandbox.setBackground(new java.awt.Color(0, 204, 153));
        Btn_Sandbox.setText("Sandbox");
        Btn_Sandbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_SandboxActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_Sandbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, -1, -1));

        SpinnerTaille.setModel(new javax.swing.SpinnerNumberModel(4, 4, 20, 1));
        getContentPane().add(SpinnerTaille, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, 70, -1));

        Txt_Selection_Diff.setText("Sélectionnez la difficultée :");
        getContentPane().add(Txt_Selection_Diff, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, -1, -1));

        Txt_SandTaille.setText("Lignes x Colonnes");
        getContentPane().add(Txt_SandTaille, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, -1, -1));

        SpinnerMelange.setModel(new javax.swing.SpinnerNumberModel(1, 1, 1000, 1));
        getContentPane().add(SpinnerMelange, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 70, -1));

        SpinnerPosVert.setModel(new javax.swing.SpinnerNumberModel(0, 0, 19, 1));
        getContentPane().add(SpinnerPosVert, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 70, -1));

        SpinnerPosHor.setModel(new javax.swing.SpinnerNumberModel(0, 0, 19, 1));
        getContentPane().add(SpinnerPosHor, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, 70, -1));

        Btn_LancerJeu.setText("Jouer");
        Btn_LancerJeu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_LancerJeuActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_LancerJeu, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, -1, -1));

        Txt_SandPosHor.setText("Position horizontale du cavalier");
        getContentPane().add(Txt_SandPosHor, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 180, -1));

        Txt_SandPosVert.setText("Position verticale du cavalier");
        getContentPane().add(Txt_SandPosVert, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, -1, -1));

        Txt_SandMelange.setText("Nombre de case à valider");
        getContentPane().add(Txt_SandMelange, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 160, -1));

        Txt_SandBox.setText("Sélectionnez vos paramètres de jeu :");
        getContentPane().add(Txt_SandBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, -1));

        Btn_RetourDiff.setText("Retour");
        Btn_RetourDiff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RetourDiffActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_RetourDiff, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, -1, -1));

        Btn_RetourMode.setText("Retour");
        Btn_RetourMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RetourModeActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_RetourMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_Mode_fantasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_Mode_fantasActionPerformed
        this.ModeJeu = 1;

        // Désafficher mode jeu
        Btn_Mode_fantas.setVisible(false);
        Btn_Mode_libre.setVisible(false);
        Btn_Mode_enigme.setVisible(false);

        // Afficher difficulte
        Btn_Facile.setVisible(true);
        Btn_Moyen.setVisible(true);
        Btn_Speedrun.setVisible(true);
        Btn_Chrono.setVisible(true);
        Btn_Sandbox.setVisible(true);
        Btn_RetourMode.setVisible(true);

        // Afficher bon txt
        Txt_Selection_Diff.setVisible(true);
        Txt_Selection_Mode.setVisible(false);
    }//GEN-LAST:event_Btn_Mode_fantasActionPerformed

    private void Btn_Mode_libreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_Mode_libreActionPerformed
        this.ModeJeu = 0;
        

        // Désafficher mode jeu
        Btn_Mode_fantas.setVisible(false);
        Btn_Mode_libre.setVisible(false);
        Btn_Mode_enigme.setVisible(false);

        // Afficher difficulte
        Btn_Facile.setVisible(true);
        Btn_Moyen.setVisible(true);
        Btn_Speedrun.setVisible(true);
        Btn_Chrono.setVisible(true);
        Btn_Sandbox.setVisible(true);
        Btn_RetourMode.setVisible(true);

        // Afficher bon txt
        Txt_Selection_Diff.setVisible(true);
        Txt_Selection_Mode.setVisible(false);
    }//GEN-LAST:event_Btn_Mode_libreActionPerformed

    private void Btn_Mode_enigmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_Mode_enigmeActionPerformed
        this.ModeJeu = 2;     
        this.Difficulte = -1;

        // Fermer la fenêtre de démarrage
        this.dispose();

        // Ouvrir la fenêtre principale avec le niveau de difficulté sélectionné
        Fenetre_Principale fenetrePrincipale = new Fenetre_Principale(this.Difficulte, this.ModeJeu);
        fenetrePrincipale.setVisible(true);

        fenetrePrincipale.setLocationRelativeTo(null);
    }//GEN-LAST:event_Btn_Mode_enigmeActionPerformed

    private void Btn_ChronoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ChronoActionPerformed
        this.Difficulte = 3;

        // Fermer la fenêtre de démarrage
        this.dispose();

        // Ouvrir la fenêtre principale avec le niveau de difficulté sélectionné
        Fenetre_Principale fenetrePrincipale = new Fenetre_Principale(this.Difficulte, this.ModeJeu);
        fenetrePrincipale.setVisible(true);

        fenetrePrincipale.setLocationRelativeTo(null);
    }//GEN-LAST:event_Btn_ChronoActionPerformed

    private void Btn_SandboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_SandboxActionPerformed
        this.Difficulte = 4;

        // Retirer les difficulte
        Btn_Facile.setVisible(false);
        Btn_Moyen.setVisible(false);
        Btn_Speedrun.setVisible(false);
        Btn_Chrono.setVisible(false);
        Btn_Sandbox.setVisible(false);
        
        // Affichage settings sandbox
        SpinnerTaille.setVisible(true);
        SpinnerPosHor.setVisible(true);
        SpinnerPosVert.setVisible(true);
        SpinnerMelange.setVisible(true);
        Btn_LancerJeu.setVisible(true);
        Btn_RetourDiff.setVisible(true);
        
        Txt_SandTaille.setVisible(true);
        Txt_SandMelange.setVisible(true);
        Txt_SandPosHor.setVisible(true);
        Txt_SandPosVert.setVisible(true);
        Txt_SandBox.setVisible(true);
        Txt_Selection_Diff.setVisible(false);
    }//GEN-LAST:event_Btn_SandboxActionPerformed

    private void Btn_QuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_QuitterActionPerformed
        System.exit(0);
    }//GEN-LAST:event_Btn_QuitterActionPerformed

    private void Btn_SpeedrunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_SpeedrunActionPerformed
        this.Difficulte = 2;

        // Fermer la fenêtre de démarrage
        this.dispose();

        // Ouvrir la fenêtre principale avec le niveau de difficulté sélectionné
        Fenetre_Principale fenetrePrincipale = new Fenetre_Principale(this.Difficulte, this.ModeJeu);
        fenetrePrincipale.setVisible(true);

        fenetrePrincipale.setLocationRelativeTo(null);
    }//GEN-LAST:event_Btn_SpeedrunActionPerformed

    private void Btn_MoyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_MoyenActionPerformed
        this.Difficulte = 1;

        // Fermer la fenêtre de démarrage
        this.dispose();

        // Ouvrir la fenêtre principale avec le niveau de difficulté sélectionné
        Fenetre_Principale fenetrePrincipale = new Fenetre_Principale(this.Difficulte, this.ModeJeu);
        fenetrePrincipale.setVisible(true);

        fenetrePrincipale.setLocationRelativeTo(null);
    }//GEN-LAST:event_Btn_MoyenActionPerformed

    private void Btn_FacileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_FacileActionPerformed
        this.Difficulte = 0;

        // Fermer la fenêtre de démarrage
        this.dispose();

        // Ouvrir la fenêtre principale avec le niveau de difficulté sélectionné
        Fenetre_Principale fenetrePrincipale = new Fenetre_Principale(this.Difficulte, this.ModeJeu);
        fenetrePrincipale.setVisible(true);

        fenetrePrincipale.setLocationRelativeTo(null);
    }//GEN-LAST:event_Btn_FacileActionPerformed

    private void Btn_LancerJeuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_LancerJeuActionPerformed
        int valeurMelange = (int) SpinnerMelange.getValue();
        int valeurTaille = (int) SpinnerTaille.getValue();
        int valeurPosHor = (int) SpinnerPosHor.getValue();
        int valeurPosVert = (int) SpinnerPosVert.getValue();
        
        // Fermer la fenêtre de démarrage
        this.dispose();

        // Ouvrir la fenêtre principale avec le niveau de difficulté sélectionné
        Fenetre_Principale fenetrePrincipale = new Fenetre_Principale(this.Difficulte, this.ModeJeu,valeurTaille,valeurPosHor,valeurPosVert,valeurMelange);
        fenetrePrincipale.setVisible(true);

        fenetrePrincipale.setLocationRelativeTo(null);
    }//GEN-LAST:event_Btn_LancerJeuActionPerformed

    private void Btn_RetourDiffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RetourDiffActionPerformed
        // Remettre les difficulte
        Btn_Facile.setVisible(true);
        Btn_Moyen.setVisible(true);
        Btn_Speedrun.setVisible(true);
        Btn_Chrono.setVisible(true);
        Btn_Sandbox.setVisible(true);
        Btn_RetourMode.setVisible(true);
        
        // Désaffichage settings sandbox
        SpinnerTaille.setVisible(false);
        SpinnerPosHor.setVisible(false);
        SpinnerPosVert.setVisible(false);
        SpinnerMelange.setVisible(false);
        Btn_LancerJeu.setVisible(false);
        Btn_RetourDiff.setVisible(false);
        
        Txt_SandTaille.setVisible(false);
        Txt_SandMelange.setVisible(false);
        Txt_SandPosHor.setVisible(false);
        Txt_SandPosVert.setVisible(false);
        Txt_SandBox.setVisible(false);
        Txt_Selection_Diff.setVisible(true);
    }//GEN-LAST:event_Btn_RetourDiffActionPerformed

    private void Btn_RetourModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RetourModeActionPerformed
        // Résafficher mode jeu
        Btn_Mode_fantas.setVisible(true);
        Btn_Mode_libre.setVisible(true);
        Btn_Mode_enigme.setVisible(true);

        // Désafficher difficulte
        Btn_Facile.setVisible(false);
        Btn_Moyen.setVisible(false);
        Btn_Speedrun.setVisible(false);
        Btn_Chrono.setVisible(false);
        Btn_Sandbox.setVisible(false);
        Btn_RetourMode.setVisible(false);

        // Afficher bon txt
        Txt_Selection_Diff.setVisible(false);
        Txt_Selection_Mode.setVisible(true);
    }//GEN-LAST:event_Btn_RetourModeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fenetre_Demarrer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fenetre_Demarrer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fenetre_Demarrer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fenetre_Demarrer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fenetre_Demarrer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Chrono;
    private javax.swing.JButton Btn_Facile;
    private javax.swing.JButton Btn_LancerJeu;
    private javax.swing.JButton Btn_Mode_enigme;
    private javax.swing.JButton Btn_Mode_fantas;
    private javax.swing.JButton Btn_Mode_libre;
    private javax.swing.JButton Btn_Moyen;
    private javax.swing.JButton Btn_Quitter;
    private javax.swing.JButton Btn_RetourDiff;
    private javax.swing.JButton Btn_RetourMode;
    private javax.swing.JButton Btn_Sandbox;
    private javax.swing.JButton Btn_Speedrun;
    private javax.swing.JSpinner SpinnerMelange;
    private javax.swing.JSpinner SpinnerPosHor;
    private javax.swing.JSpinner SpinnerPosVert;
    private javax.swing.JSpinner SpinnerTaille;
    private javax.swing.JLabel Txt_Bienv;
    private javax.swing.JLabel Txt_SandBox;
    private javax.swing.JLabel Txt_SandMelange;
    private javax.swing.JLabel Txt_SandPosHor;
    private javax.swing.JLabel Txt_SandPosVert;
    private javax.swing.JLabel Txt_SandTaille;
    private javax.swing.JLabel Txt_Selection_Diff;
    private javax.swing.JLabel Txt_Selection_Mode;
    // End of variables declaration//GEN-END:variables
}
